grammar com.roboconf.RoboConfDsl with org.eclipse.xtext.common.Terminals

generate roboConfDsl "http://www.roboconf.com/RoboConfDsl"


Model:
	//greetings+=Greeting*;
	Features+=Feature*;
	
//Greeting:
//	'Hello' name=ID '!';
//	
//HolloWorld:
//	'hello people'
//;

Feature:
	Component | Facet | Instance | SecurityGroup
;



//Component description

Component:
	 name=ID '{'
		(Properties+=Propertie)* 
		
	'}'
;

Propertie: 
	'{propertie}' Installer | Children | Exports | Imports | Facet | Extends | Alias | Icon
	
	
;

Icon:
	'icon:' name = ID'.'extension=Extension POINT_VIRGULE
;

Extension:
	'jpg' | 'png' | 'gif'
;

Alias:
	'alias:' (description+=ID)+ POINT_VIRGULE
;



// TODO Extend
Extends:
	extendsValue=ID
	((VIRGULE)otherExtends+=ID*)? POINT_VIRGULE
;


Imports:
	('imports:')? ID'.'ID (VIRGULE ID'.'ID)* POINT_VIRGULE
;


Exports:
	('exports:')? ID ((VIRGULE) ID'=' INT )* POINT_VIRGULE
;


Children:
	('children:')?  children = child POINT_VIRGULE
;

child:
	expression (VIRGULE expression )* POINT_VIRGULE
;

expression:
	ID
;




Installer:
	'installer:' name=ID POINT_VIRGULE
;



//Facet description

Facet:
	'facet' namefacet=ID '{'
		children = Children? &
		exports = Exports? &
		extendsFacet = Extendfacets?
	
	'}'
;

Extendfacets:
	'extends:' facets(VIRGULE facets)* POINT_VIRGULE
;

facets:
	ID
;

// Instance Description

Instance:
	'instance of' nstanceName=[Component] '{'
		(InstanceProperties+=InstancePropertie)*
	'}'
;

InstancePropertie:
	nameInst = Name &
	count = Count? &
	instance = Instances? 
;

Instances:
	Instance
;


Count:
	'count:' val = INT POINT_VIRGULE
;


Name:
//	'name:'  (nameN+=ID)+  POINT_VIRGULE
    'name:'   nameN=ID  POINT_VIRGULE
;

ECARule:
	'Rule' eca_rule_name = [Component] '{' 
		(ecaproperties += ECAProperty)*
	'}' 
;

ECAProperty:
	   elastic = Elastic
	  & numInstances = NumInstances? 
	  & minallowedinstances= MinAllowedInstances? 
	  & maxallowedinstances= MaxAllowedInstances?
;

Elastic:
	'elastic:'  ID POINT_VIRGULE
;		

NumInstances:
	'numInstances:' INT POINT_VIRGULE
;		

MinAllowedInstances:
	'minAllowedInstances:' INT POINT_VIRGULE
;		

MaxAllowedInstances:
	'maxAllowedInstances:' INT POINT_VIRGULE
;

SecurityGroup:
	name=ID '{'
		description = Description &
		ipPermissions = IpPermissions&
		groupName = GroupName&
		ownerID = OwnerID&
		groupID = GroupID
		
	'}'
;

GroupID:
	'groupID:' ID POINT_VIRGULE
;


GroupName:
	'groupeName:' ID POINT_VIRGULE
;


OwnerID:
	'ownerId:' ID POINT_VIRGULE
;


IpPermissions:
	'ipPermission:' '(['
		'{'
		'ToPort:' ID POINT_VIRGULE
		'IpProtocol:' STRING POINT_VIRGULE
		'IpRanges:' '(['
				'{'
					'CdriIP:' ID'.'ID'.'ID'.'ID'/'ID  POINT_VIRGULE
				'}'
					'])'
		
		'FromPort:' ID POINT_VIRGULE
		'UserIdGroupPairs:' ID'.'ID (VIRGULE ID'.'ID)* POINT_VIRGULE
					'])'
;


Description:
	'description:' ID POINT_VIRGULE
;









 

terminal ID : '^'?('a'..'z'|'A'..'Z'|'_')('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
terminal VIRGULE : ',';
terminal POINT_VIRGULE : ';';